{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { TweetsApi } from '../../../services/api/TweetsApi';\nimport { setLoadingState, setTweets, TweetsActionsType } from './actionCreators';\nimport { LoadingState } from './contracts/state';\nexport function* fetchTweetsRequest() {\n  try {\n    const items = yield call(TweetsApi.fetchTweets);\n    yield put(setTweets(items));\n  } catch (error) {\n    yield put(setLoadingState(LoadingState.ERROR));\n  }\n}\nexport function* fetchAddTweetsRequest({\n  payload\n}) {\n  try {\n    const data = {\n      id: Math.random().toString().substr(2),\n      _id: Math.random().toString().substr(2),\n      text: payload,\n      user: {\n        fullname: 'alex testovuj',\n        userName: 'alex testovuj',\n        avatarUrl: 'https://source.unsplash.com/random/100x100?3'\n      }\n    };\n    const items = yield call(TweetsApi.addTweet, data);\n    yield put(setTweets(items));\n  } catch (error) {\n    yield put(setLoadingState(LoadingState.ERROR));\n  }\n}\nexport function* tweetsSaga() {\n  yield takeEvery(TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest);\n  yield takeEvery(TweetsActionsType.FETCH_ADD_TWEET, fetchAddTweetsRequest);\n}","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tweets/sagas.ts"],"names":["call","put","takeEvery","TweetsApi","setLoadingState","setTweets","TweetsActionsType","LoadingState","fetchTweetsRequest","items","fetchTweets","error","ERROR","fetchAddTweetsRequest","payload","data","id","Math","random","toString","substr","_id","text","user","fullname","userName","avatarUrl","addTweet","tweetsSaga","FETCH_TWEETS","FETCH_ADD_TWEET"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAGEC,eAHF,EAIEC,SAJF,EAKEC,iBALF,QAMO,kBANP;AAOA,SAASC,YAAT,QAA0D,mBAA1D;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,MAAI;AACF,UAAMC,KAA2B,GAAG,MAAMT,IAAI,CAACG,SAAS,CAACO,WAAX,CAA9C;AACA,UAAMT,GAAG,CAACI,SAAS,CAACI,KAAD,CAAV,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMV,GAAG,CAACG,eAAe,CAACG,YAAY,CAACK,KAAd,CAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA2E;AAChF,MAAI;AACF,UAAMC,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,GAAyBC,MAAzB,CAAgC,CAAhC,CADO;AAEXC,MAAAA,GAAG,EAAEJ,IAAI,CAACC,MAAL,GAAcC,QAAd,GAAyBC,MAAzB,CAAgC,CAAhC,CAFM;AAGXE,MAAAA,IAAI,EAAER,OAHK;AAIXS,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,eADN;AAEJC,QAAAA,QAAQ,EAAE,eAFN;AAGJC,QAAAA,SAAS,EAAE;AAHP;AAJK,KAAb;AAWA,UAAMjB,KAA2B,GAAG,MAAMT,IAAI,CAACG,SAAS,CAACwB,QAAX,EAAqBZ,IAArB,CAA9C;AACA,UAAMd,GAAG,CAACI,SAAS,CAACI,KAAD,CAAV,CAAT;AACD,GAdD,CAcE,OAAOE,KAAP,EAAc;AACd,UAAMV,GAAG,CAACG,eAAe,CAACG,YAAY,CAACK,KAAd,CAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUgB,UAAV,GAAuB;AAC5B,QAAM1B,SAAS,CAACI,iBAAiB,CAACuB,YAAnB,EAAiCrB,kBAAjC,CAAf;AACA,QAAMN,SAAS,CAACI,iBAAiB,CAACwB,eAAnB,EAAoCjB,qBAApC,CAAf;AACD","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { TweetsApi } from '../../../services/api/TweetsApi';\nimport {\n  AddTweetActionInterface,\n  FetchAddTweetActionInterface,\n  setLoadingState,\n  setTweets,\n  TweetsActionsType,\n} from './actionCreators';\nimport { LoadingState, TweetsState, TweetInterface } from './contracts/state';\n\nexport function* fetchTweetsRequest() {\n  try {\n    const items: TweetsState['items'] = yield call(TweetsApi.fetchTweets);\n    yield put(setTweets(items));\n  } catch (error) {\n    yield put(setLoadingState(LoadingState.ERROR));\n  }\n}\n\nexport function* fetchAddTweetsRequest({ payload }: FetchAddTweetActionInterface) {\n  try {\n    const data = {\n      id: Math.random().toString().substr(2),\n      _id: Math.random().toString().substr(2),\n      text: payload,\n      user: {\n        fullname: 'alex testovuj',\n        userName: 'alex testovuj',\n        avatarUrl: 'https://source.unsplash.com/random/100x100?3',\n      },\n    };\n\n    const items: TweetsState['items'] = yield call(TweetsApi.addTweet, data);\n    yield put(setTweets(items));\n  } catch (error) {\n    yield put(setLoadingState(LoadingState.ERROR));\n  }\n}\n\nexport function* tweetsSaga() {\n  yield takeEvery(TweetsActionsType.FETCH_TWEETS, fetchTweetsRequest);\n  yield takeEvery(TweetsActionsType.FETCH_ADD_TWEET, fetchAddTweetsRequest);\n}\n"]},"metadata":{},"sourceType":"module"}