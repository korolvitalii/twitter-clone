{"ast":null,"code":"import produce from 'immer';\nimport { TweetActionsType } from './actionCreators';\nimport { LoadingState } from './contracts/state';\nconst initialState = {\n  items: undefined,\n  loadingState: LoadingState.NEVER\n};\nexport const tweetReducer = produce((draft, actions) => {\n  switch (actions.type) {\n    case TweetActionsType.SET_TWEET:\n      {\n        draft.items = actions.payload;\n        draft.loadingState = LoadingState.LOADED;\n        break;\n      }\n\n    case TweetActionsType.FETCH_TWEET:\n      {\n        draft.loadingState = LoadingState.LOADING;\n        break;\n      }\n\n    case TweetActionsType.SET_LOADING_STATE:\n      {\n        draft.loadingState = actions.payload;\n        break;\n      }\n\n    default:\n      {\n        return draft;\n      }\n  }\n}, initialState);","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tweet/reducer.ts"],"names":["produce","TweetActionsType","LoadingState","initialState","items","undefined","loadingState","NEVER","tweetReducer","draft","actions","type","SET_TWEET","payload","LOADED","FETCH_TWEET","LOADING","SET_LOADING_STATE"],"mappings":"AAAA,OAAOA,OAAP,MAA+B,OAA/B;AACA,SAAuBC,gBAAvB,QAA+C,kBAA/C;AACA,SAASC,YAAT,QAAyC,mBAAzC;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,KAAK,EAAEC,SADwB;AAE/BC,EAAAA,YAAY,EAAEJ,YAAY,CAACK;AAFI,CAAjC;AAKA,OAAO,MAAMC,YAAY,GAAGR,OAAO,CAAC,CAACS,KAAD,EAA2BC,OAA3B,KAAqD;AACvF,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKV,gBAAgB,CAACW,SAAtB;AAAiC;AAC/BH,QAAAA,KAAK,CAACL,KAAN,GAAcM,OAAO,CAACG,OAAtB;AACAJ,QAAAA,KAAK,CAACH,YAAN,GAAqBJ,YAAY,CAACY,MAAlC;AACA;AACD;;AACD,SAAKb,gBAAgB,CAACc,WAAtB;AAAmC;AACjCN,QAAAA,KAAK,CAACH,YAAN,GAAqBJ,YAAY,CAACc,OAAlC;AACA;AACD;;AACD,SAAKf,gBAAgB,CAACgB,iBAAtB;AAAyC;AACvCR,QAAAA,KAAK,CAACH,YAAN,GAAqBI,OAAO,CAACG,OAA7B;AACA;AACD;;AACD;AAAS;AACP,eAAOJ,KAAP;AACD;AAhBH;AAkBD,CAnBkC,EAmBhCN,YAnBgC,CAA5B","sourcesContent":["import produce, { Draft } from 'immer';\nimport { TweetActions, TweetActionsType } from './actionCreators';\nimport { LoadingState, TweetState } from './contracts/state';\n\nconst initialState: TweetState = {\n  items: undefined,\n  loadingState: LoadingState.NEVER,\n};\n\nexport const tweetReducer = produce((draft: Draft<TweetState>, actions: TweetActions) => {\n  switch (actions.type) {\n    case TweetActionsType.SET_TWEET: {\n      draft.items = actions.payload;\n      draft.loadingState = LoadingState.LOADED;\n      break;\n    }\n    case TweetActionsType.FETCH_TWEET: {\n      draft.loadingState = LoadingState.LOADING;\n      break;\n    }\n    case TweetActionsType.SET_LOADING_STATE: {\n      draft.loadingState = actions.payload;\n      break;\n    }\n    default: {\n      return draft;\n    }\n  }\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}