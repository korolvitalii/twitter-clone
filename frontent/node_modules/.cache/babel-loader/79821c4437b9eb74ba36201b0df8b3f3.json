{"ast":null,"code":"export let TagsActionsType;\n\n(function (TagsActionsType) {\n  TagsActionsType[\"SET_TAGS\"] = \"Tags/ SET_TAGS\";\n  TagsActionsType[\"FETCH_TAGS\"] = \"Tags/FETCH_TAGS\";\n  TagsActionsType[\"SET_LOADING_STATE\"] = \"Tags/SET_LOADING_STATE\";\n})(TagsActionsType || (TagsActionsType = {}));\n\nexport const fetchTags = () => ({\n  type: TagsActionsType.FETCH_TAGS\n});\nexport const setTags = payload => ({\n  type: TagsActionsType.SET_TAGS,\n  payload\n});\nexport const SetLoadingState = payload => ({\n  type: TagsActionsType.SET_LOADING_STATE,\n  payload\n});\n_c = SetLoadingState;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetLoadingState\");","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tags/actionCreators.ts"],"names":["TagsActionsType","fetchTags","type","FETCH_TAGS","setTags","payload","SET_TAGS","SetLoadingState","SET_LOADING_STATE"],"mappings":"AAGA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAmBZ,OAAO,MAAMC,SAAS,GAAG,OAAiC;AACxDC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADkC,CAAjC,CAAlB;AAIP,OAAO,MAAMC,OAAO,GAAIC,OAAD,KAA0D;AAC/EH,EAAAA,IAAI,EAAEF,eAAe,CAACM,QADyD;AAE/ED,EAAAA;AAF+E,CAA1D,CAAhB;AAKP,OAAO,MAAME,eAAe,GAAIF,OAAD,KAAsD;AACnFH,EAAAA,IAAI,EAAEF,eAAe,CAACQ,iBAD6D;AAEnFH,EAAAA;AAFmF,CAAtD,CAAxB;KAAME,e","sourcesContent":["import { Action } from 'redux';\nimport { LoadingState, TagsState } from './contracts/state';\n\nexport enum TagsActionsType {\n  SET_TAGS = 'Tags/ SET_TAGS',\n  FETCH_TAGS = 'Tags/FETCH_TAGS',\n  SET_LOADING_STATE = 'Tags/SET_LOADING_STATE',\n}\n\ninterface SetTagsActionInterface extends Action<TagsActionsType> {\n  type: TagsActionsType.SET_TAGS;\n  payload: TagsState['items'];\n}\n\ninterface FetchTagsActionInterface extends Action<TagsActionsType> {\n  type: TagsActionsType.FETCH_TAGS;\n}\ninterface SetLoadingStateInterface extends Action<TagsActionsType> {\n  type: TagsActionsType.SET_LOADING_STATE;\n  payload: LoadingState;\n}\n\nexport const fetchTags = (): FetchTagsActionInterface => ({\n  type: TagsActionsType.FETCH_TAGS,\n});\n\nexport const setTags = (payload: TagsState['items']): SetTagsActionInterface => ({\n  type: TagsActionsType.SET_TAGS,\n  payload,\n});\n\nexport const SetLoadingState = (payload: LoadingState): SetLoadingStateInterface => ({\n  type: TagsActionsType.SET_LOADING_STATE,\n  payload,\n});\n\nexport type TagsActions =\n  | SetTagsActionInterface\n  | FetchTagsActionInterface\n  | SetLoadingStateInterface;\n"]},"metadata":{},"sourceType":"module"}