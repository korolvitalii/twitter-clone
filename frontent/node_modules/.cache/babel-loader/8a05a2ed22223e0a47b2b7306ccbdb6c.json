{"ast":null,"code":"export let TweetsActionsType;\n\n(function (TweetsActionsType) {\n  TweetsActionsType[\"SET_TWEETS\"] = \"tweets/SET_TWEETS\";\n  TweetsActionsType[\"FETCH_TWEETS\"] = \"tweets/FETCH_TWEETS\";\n  TweetsActionsType[\"SET_LOADING_STATE\"] = \"tweets/SET_LOADING_STATE\";\n  TweetsActionsType[\"FETCH_ADD_TWEET\"] = \"tweets/FETCH_ADD_TWEET\";\n  TweetsActionsType[\"ADD_TWEET\"] = \"/tweets/ADD_TWEET\";\n})(TweetsActionsType || (TweetsActionsType = {}));\n\nexport const fetchTweets = () => ({\n  type: TweetsActionsType.FETCH_TWEETS\n});\nexport const setTweets = payload => ({\n  type: TweetsActionsType.SET_TWEETS,\n  payload\n});\nexport const fetchAddTweet = payload => ({\n  type: TweetsActionsType.FETCH_ADD_TWEET,\n  payload\n});\nexport const addTweet = payload => ({\n  type: TweetsActionsType.ADD_TWEET,\n  payload\n});\nexport const setLoadingState = payload => ({\n  type: TweetsActionsType.SET_LOADING_STATE,\n  payload\n});","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tweets/actionCreators.ts"],"names":["TweetsActionsType","fetchTweets","type","FETCH_TWEETS","setTweets","payload","SET_TWEETS","fetchAddTweet","FETCH_ADD_TWEET","addTweet","ADD_TWEET","setLoadingState","SET_LOADING_STATE"],"mappings":"AAGA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;AAAAA,EAAAA,iB;GAAAA,iB,KAAAA,iB;;AAgCZ,OAAO,MAAMC,WAAW,GAAG,OAAmC;AAC5DC,EAAAA,IAAI,EAAEF,iBAAiB,CAACG;AADoC,CAAnC,CAApB;AAIP,OAAO,MAAMC,SAAS,GAAIC,OAAD,KAA8D;AACrFH,EAAAA,IAAI,EAAEF,iBAAiB,CAACM,UAD6D;AAErFD,EAAAA;AAFqF,CAA9D,CAAlB;AAKP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAoD;AAC/EH,EAAAA,IAAI,EAAEF,iBAAiB,CAACQ,eADuD;AAE/EH,EAAAA;AAF+E,CAApD,CAAtB;AAKP,OAAO,MAAMI,QAAQ,GAAIJ,OAAD,KAAuD;AAC7EH,EAAAA,IAAI,EAAEF,iBAAiB,CAACU,SADqD;AAE7EL,EAAAA;AAF6E,CAAvD,CAAjB;AAKP,OAAO,MAAMM,eAAe,GAAIN,OAAD,KAAsD;AACnFH,EAAAA,IAAI,EAAEF,iBAAiB,CAACY,iBAD2D;AAEnFP,EAAAA;AAFmF,CAAtD,CAAxB","sourcesContent":["import { Action } from 'redux';\nimport { LoadingState, TweetInterface, TweetsState } from './contracts/state';\n\nexport enum TweetsActionsType {\n  SET_TWEETS = 'tweets/SET_TWEETS',\n  FETCH_TWEETS = 'tweets/FETCH_TWEETS',\n  SET_LOADING_STATE = 'tweets/SET_LOADING_STATE',\n  FETCH_ADD_TWEET = 'tweets/FETCH_ADD_TWEET',\n  ADD_TWEET = '/tweets/ADD_TWEET',\n}\n\ninterface SetTweetsActionInterface extends Action<TweetsActionsType> {\n  type: TweetsActionsType.SET_TWEETS;\n  payload: TweetsState['items'];\n}\n\ninterface FetchTweetsActionInterface extends Action<TweetsActionsType> {\n  type: TweetsActionsType.FETCH_TWEETS;\n}\n\ninterface SetLoadingStateInterface extends Action<TweetsActionsType> {\n  type: TweetsActionsType.SET_LOADING_STATE;\n  payload: LoadingState;\n}\n\nexport interface FetchAddTweetActionInterface extends Action<TweetsActionsType> {\n  type: TweetsActionsType.FETCH_ADD_TWEET;\n  payload: string;\n}\n\nexport interface AddTweetActionInterface extends Action<TweetsActionsType> {\n  type: TweetsActionsType.ADD_TWEET;\n  payload: TweetInterface;\n}\n\nexport const fetchTweets = (): FetchTweetsActionInterface => ({\n  type: TweetsActionsType.FETCH_TWEETS,\n});\n\nexport const setTweets = (payload: TweetsState['items']): SetTweetsActionInterface => ({\n  type: TweetsActionsType.SET_TWEETS,\n  payload,\n});\n\nexport const fetchAddTweet = (payload: string): FetchAddTweetActionInterface => ({\n  type: TweetsActionsType.FETCH_ADD_TWEET,\n  payload,\n});\n\nexport const addTweet = (payload: TweetInterface): AddTweetActionInterface => ({\n  type: TweetsActionsType.ADD_TWEET,\n  payload,\n});\n\nexport const setLoadingState = (payload: LoadingState): SetLoadingStateInterface => ({\n  type: TweetsActionsType.SET_LOADING_STATE,\n  payload,\n});\n\nexport type TweetsActions =\n  | SetTweetsActionInterface\n  | FetchTweetsActionInterface\n  | SetLoadingStateInterface\n  | FetchAddTweetActionInterface\n  | AddTweetActionInterface;\n"]},"metadata":{},"sourceType":"module"}