{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { TweetsApi } from '../../../services/api/TweetsApi';\nimport { SetLoadingState, setTweet, TweetActionsType } from './actionCreators';\nimport { LoadingState } from './contracts/state';\nexport function* fetchTweetRequest({\n  payload: tweetId\n}) {\n  try {\n    const items = yield call(TweetsApi.fetchTweetData, tweetId);\n    yield put(setTweet(items));\n  } catch (error) {\n    yield put(SetLoadingState(LoadingState.ERROR));\n  }\n}\nexport function* tweetSaga() {\n  yield takeEvery(TweetActionsType.FETCH_TWEET, fetchTweetRequest);\n}","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tweet/sagas.ts"],"names":["call","put","takeEvery","TweetsApi","SetLoadingState","setTweet","TweetActionsType","LoadingState","fetchTweetRequest","payload","tweetId","items","fetchTweetData","error","ERROR","tweetSaga","FETCH_TWEET"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AAEA,SAEEC,eAFF,EAGEC,QAHF,EAIEC,gBAJF,QAKO,kBALP;AAMA,SAASC,YAAT,QAAyC,mBAAzC;AAEA,OAAO,UAAUC,iBAAV,CAA4B;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAA5B,EAA6E;AAClF,MAAI;AACF,UAAMC,KAA0B,GAAG,MAAMX,IAAI,CAACG,SAAS,CAACS,cAAX,EAA2BF,OAA3B,CAA7C;AACA,UAAMT,GAAG,CAACI,QAAQ,CAACM,KAAD,CAAT,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACG,eAAe,CAACG,YAAY,CAACO,KAAd,CAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,SAAV,GAAsB;AAC3B,QAAMb,SAAS,CAACI,gBAAgB,CAACU,WAAlB,EAA+BR,iBAA/B,CAAf;AACD","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { TweetsApi } from '../../../services/api/TweetsApi';\n\nimport {\n  FetchTweetActionInterface,\n  SetLoadingState,\n  setTweet,\n  TweetActionsType,\n} from './actionCreators';\nimport { LoadingState, TweetState } from './contracts/state';\n\nexport function* fetchTweetRequest({ payload: tweetId }: FetchTweetActionInterface) {\n  try {\n    const items: TweetState['items'] = yield call(TweetsApi.fetchTweetData, tweetId);\n    yield put(setTweet(items));\n  } catch (error) {\n    yield put(SetLoadingState(LoadingState.ERROR));\n  }\n}\n\nexport function* tweetSaga() {\n  yield takeEvery(TweetActionsType.FETCH_TWEET, fetchTweetRequest);\n}\n"]},"metadata":{},"sourceType":"module"}