{"ast":null,"code":"import produce from 'immer';\nimport { TagsActionsType } from './actionCreators';\nimport { LoadingState } from './contracts/state';\nconst initialState = {\n  items: [],\n  loadingState: LoadingState.NEVER\n};\nexport const tagsReducer = produce((draft, actions) => {\n  switch (actions.type) {\n    case TagsActionsType.SET_TAGS:\n      {\n        draft.items = actions.payload;\n        draft.loadingState = LoadingState.LOADED;\n        break;\n      }\n\n    case TagsActionsType.FETCH_TAGS:\n      {\n        draft.loadingState = LoadingState.LOADING;\n        break;\n      }\n\n    case TagsActionsType.SET_LOADING_STATE:\n      {\n        draft.loadingState = actions.payload;\n        break;\n      }\n\n    default:\n      {\n        return draft;\n      }\n  }\n}, initialState);","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tags/reducer.ts"],"names":["produce","TagsActionsType","LoadingState","initialState","items","loadingState","NEVER","tagsReducer","draft","actions","type","SET_TAGS","payload","LOADED","FETCH_TAGS","LOADING","SET_LOADING_STATE"],"mappings":"AAAA,OAAOA,OAAP,MAA+B,OAA/B;AACA,SAASC,eAAT,QAA6C,kBAA7C;AACA,SAASC,YAAT,QAAwC,mBAAxC;AAEA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,EADuB;AAE9BC,EAAAA,YAAY,EAAEH,YAAY,CAACI;AAFG,CAAhC;AAKA,OAAO,MAAMC,WAAW,GAAGP,OAAO,CAAC,CAACQ,KAAD,EAA0BC,OAA1B,KAAmD;AACpF,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKT,eAAe,CAACU,QAArB;AAA+B;AAC7BH,QAAAA,KAAK,CAACJ,KAAN,GAAcK,OAAO,CAACG,OAAtB;AACAJ,QAAAA,KAAK,CAACH,YAAN,GAAqBH,YAAY,CAACW,MAAlC;AACA;AACD;;AACD,SAAKZ,eAAe,CAACa,UAArB;AAAiC;AAC/BN,QAAAA,KAAK,CAACH,YAAN,GAAqBH,YAAY,CAACa,OAAlC;AACA;AACD;;AACD,SAAKd,eAAe,CAACe,iBAArB;AAAwC;AACtCR,QAAAA,KAAK,CAACH,YAAN,GAAqBI,OAAO,CAACG,OAA7B;AACA;AACD;;AACD;AAAS;AACP,eAAOJ,KAAP;AACD;AAhBH;AAkBD,CAnBiC,EAmB/BL,YAnB+B,CAA3B","sourcesContent":["import produce, { Draft } from 'immer';\nimport { TagsActionsType, TagsActions } from './actionCreators';\nimport { LoadingState, TagsState } from './contracts/state';\n\nconst initialState: TagsState = {\n  items: [],\n  loadingState: LoadingState.NEVER,\n};\n\nexport const tagsReducer = produce((draft: Draft<TagsState>, actions: TagsActions) => {\n  switch (actions.type) {\n    case TagsActionsType.SET_TAGS: {\n      draft.items = actions.payload;\n      draft.loadingState = LoadingState.LOADED;\n      break;\n    }\n    case TagsActionsType.FETCH_TAGS: {\n      draft.loadingState = LoadingState.LOADING;\n      break;\n    }\n    case TagsActionsType.SET_LOADING_STATE: {\n      draft.loadingState = actions.payload;\n      break;\n    }\n    default: {\n      return draft;\n    }\n  }\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}