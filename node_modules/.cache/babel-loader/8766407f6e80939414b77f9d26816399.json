{"ast":null,"code":"import produce from 'immer';\nimport { TweetsActionsType } from './actionCreators';\nimport { LoadingState } from './contracts/state';\nconst initialState = {\n  items: [],\n  loadingState: LoadingState.NEVER,\n  addTweetState: LoadingState.NEVER\n};\nexport const tweetsReducer = produce((draft, actions) => {\n  switch (actions.type) {\n    case TweetsActionsType.SET_TWEETS:\n      {\n        draft.items = actions.payload;\n        draft.loadingState = LoadingState.LOADED;\n        break;\n      }\n\n    case TweetsActionsType.ADD_TWEET:\n      {\n        draft.items.splice(0, 0, actions.payload);\n        draft.loadingState = LoadingState.LOADED;\n        debugger;\n        break;\n      }\n\n    case TweetsActionsType.FETCH_TWEETS:\n      {\n        draft.loadingState = LoadingState.LOADING;\n        break;\n      }\n\n    case TweetsActionsType.SET_LOADING_STATE:\n      {\n        draft.loadingState = actions.payload;\n        break;\n      }\n\n    default:\n      {\n        return draft;\n      }\n  }\n}, initialState);","map":{"version":3,"sources":["/home/vitalii/Vitalii/twitter-clone/src/store/ducks/tweets/reducer.ts"],"names":["produce","TweetsActionsType","LoadingState","initialState","items","loadingState","NEVER","addTweetState","tweetsReducer","draft","actions","type","SET_TWEETS","payload","LOADED","ADD_TWEET","splice","FETCH_TWEETS","LOADING","SET_LOADING_STATE"],"mappings":"AAAA,OAAOA,OAAP,MAA+B,OAA/B;AACA,SAAwBC,iBAAxB,QAAiD,kBAAjD;AACA,SAASC,YAAT,QAA0C,mBAA1C;AAEA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,KAAK,EAAE,EADyB;AAEhCC,EAAAA,YAAY,EAAEH,YAAY,CAACI,KAFK;AAGhCC,EAAAA,aAAa,EAAEL,YAAY,CAACI;AAHI,CAAlC;AAMA,OAAO,MAAME,aAAa,GAAGR,OAAO,CAAC,CAACS,KAAD,EAA4BC,OAA5B,KAAuD;AAC1F,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKV,iBAAiB,CAACW,UAAvB;AAAmC;AACjCH,QAAAA,KAAK,CAACL,KAAN,GAAcM,OAAO,CAACG,OAAtB;AACAJ,QAAAA,KAAK,CAACJ,YAAN,GAAqBH,YAAY,CAACY,MAAlC;AACA;AACD;;AACD,SAAKb,iBAAiB,CAACc,SAAvB;AAAkC;AAChCN,QAAAA,KAAK,CAACL,KAAN,CAAYY,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBN,OAAO,CAACG,OAAjC;AACAJ,QAAAA,KAAK,CAACJ,YAAN,GAAqBH,YAAY,CAACY,MAAlC;AACA;AACA;AACD;;AACD,SAAKb,iBAAiB,CAACgB,YAAvB;AAAqC;AACnCR,QAAAA,KAAK,CAACJ,YAAN,GAAqBH,YAAY,CAACgB,OAAlC;AACA;AACD;;AACD,SAAKjB,iBAAiB,CAACkB,iBAAvB;AAA0C;AACxCV,QAAAA,KAAK,CAACJ,YAAN,GAAqBK,OAAO,CAACG,OAA7B;AACA;AACD;;AACD;AAAS;AACP,eAAOJ,KAAP;AACD;AAtBH;AAwBD,CAzBmC,EAyBjCN,YAzBiC,CAA7B","sourcesContent":["import produce, { Draft } from 'immer';\nimport { TweetsActions, TweetsActionsType } from './actionCreators';\nimport { LoadingState, TweetsState } from './contracts/state';\n\nconst initialState: TweetsState = {\n  items: [],\n  loadingState: LoadingState.NEVER,\n  addTweetState: LoadingState.NEVER,\n};\n\nexport const tweetsReducer = produce((draft: Draft<TweetsState>, actions: TweetsActions) => {\n  switch (actions.type) {\n    case TweetsActionsType.SET_TWEETS: {\n      draft.items = actions.payload;\n      draft.loadingState = LoadingState.LOADED;\n      break;\n    }\n    case TweetsActionsType.ADD_TWEET: {\n      draft.items.splice(0, 0, actions.payload);\n      draft.loadingState = LoadingState.LOADED;\n      debugger;\n      break;\n    }\n    case TweetsActionsType.FETCH_TWEETS: {\n      draft.loadingState = LoadingState.LOADING;\n      break;\n    }\n    case TweetsActionsType.SET_LOADING_STATE: {\n      draft.loadingState = actions.payload;\n      break;\n    }\n    default: {\n      return draft;\n    }\n  }\n}, initialState);\n"]},"metadata":{},"sourceType":"module"}